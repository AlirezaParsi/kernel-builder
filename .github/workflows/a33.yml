name: a33


on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE:
        description: 'Kernel Tree'
        default: 'https://github.com/Gabriel2392/android_kernel_samsung_a33x_xy'
        required: true
      KERNEL_TREE_BRANCH:
        description: 'Kernel Tree Branch'
        default: 'A336BXXSCEXL1'
        required: true
      CODENAME:
        description: 'Phone Codename'
        default: 'a33x'
        required: true
      UPLOAD_TO_RELEASE:
        description: 'Upload to release'
        type: boolean
        default: false

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    environment: Telegram
    permissions:
      contents: write
    steps:
    - name: Display User Inputs
      run: |
        echo "::group::User Environment Variables"
        echo "Custom Build Title: ${{ github.event.inputs.BUILD_TITLE }}"
        echo "Kernel Tree: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}"
        echo "Codename: ${{ github.event.inputs.CODENAME }}"
        echo "Upload to Release: ${{ github.event.inputs.UPLOAD_TO_RELEASE }}"
        echo "::endgroup::"

    - name: Debug Secrets
      run: |
        echo "TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}"
        echo "TELEGRAM_CHAT_ID_2: ${{ secrets.TELEGRAM_CHAT_ID_2 }}"
        echo "TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}"

    - name: Generate Build Date
      id: build_date
      run: |
        build_date=$(date +"%Y%m%d")
        echo "build_date=$build_date" >> $GITHUB_OUTPUT

    - name: Notify Build Start
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: html
        message: |
          <a href="https://raw.githubusercontent.com/AlirezaParsi/pocof3/refs/heads/base/Rich%20deep%20teal%2C%20overhead%20bird%E2%80%99s%20eye%20view%20banner%20for%20ALP%20Kernel%2C%20a%20Linux%20kernel.%20Logo%20incorporated%2C%20top-down%20perspective%2C%20luxurious%20and%20vibrant%20color.%20Social%20media%20post%20banner.jpg">‚Äå</a> <b>Kernel Build Started</b> üöÄ
          üîß <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a>
          <b>üì¶ Build Title</b>: <code>${{ github.event.inputs.BUILD_TITLE || github.event.inputs.CODENAME }}</code>
          <b>üì± Device Codename</b>: <code>${{ github.event.inputs.CODENAME }}</code>
          <b>üè∑Ô∏è Build Type</b>: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' && 'Release Build' || 'CI Build' }}
          <b>üìÑ Workflow File</b>: ${{ github.workflow }}.yml

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT
        echo "build_title=${{ github.event.inputs.BUILD_TITLE || github.event.inputs.CODENAME }}" >> $GITHUB_OUTPUT
      id: workspace

    - name: Prepare the build environment
      run: |
        sudo apt update -y
        sudo apt install -y flex bison libncurses-dev libssl-dev bc build-essential git imagemagick
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
        mkdir clang
        tar -xf clang.tar.gz -C clang
        echo "tools-folder=$(pwd)/clang" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: tools

    - name: Clone kernel source
      run: |
        git clone --depth=1 ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} kernel_tree
        echo "kernel-folder=$(pwd)/kernel_tree" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: kernel

    - name: Building kernel
      run: |
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_BUILD_USER="aliza"
        export KBUILD_BUILD_HOST="Github"
        export PLATFORM_VERSION=12
        export ANDROID_MAJOR_VERSION=s
        export TARGET_SOC=s5e8825
        make O=out s5e8825-a33xxx_defconfig PATH="${{ steps.tools.outputs.tools-folder }}/bin:$PATH"
        make O=out CC=clang -j$(nproc --all) PATH="${{ steps.tools.outputs.tools-folder }}/bin:$PATH" CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
        echo "elapsed_time=$(echo "$(date +%s)"-"${{ steps.workspace.outputs.start_time }}" | bc)" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}
      id: build

    - name: Download and Prepare Thumbnails
      run: |
        curl -o aosp_thumbnail.jpg "https://raw.githubusercontent.com/AlirezaParsi/pocof3/refs/heads/base/thumbnail.jpg" || echo "Thumbnail not found, skipping..."
        if [ -f aosp_thumbnail.jpg ]; then
          convert aosp_thumbnail.jpg -resize 320x320 -quality 80 -format jpg aosp_thumbnail.jpg
          identify aosp_thumbnail.jpg
        fi

    - name: AnyKernel3
      if: success()
      run: |
        git clone --recursive --depth=1 https://github.com/AlirezaParsi/F3aosp -b mix AnyKernel3
        if [ -e "Image.gz" ]; then
          cp -f Image.gz AnyKernel3
        fi
        if [ -e "dtb.img" ]; then
          mv -f dtb.img dtb
          cp -f dtb AnyKernel3/dtb
        fi
        if [ -e "dtbo.img" ]; then
          cp -f dtbo.img AnyKernel3
        fi
        build_date=$(date +"%Y%m%d-%H%M%S")
        name=ALPkernel-${{ github.event.inputs.CODENAME }}-$build_date.zip
        cd AnyKernel3
        zip -q -r $name *
        mv $name ../
        echo "zipname=$name" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/
      id: anykernel

    - name: Upload to Release
      if: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' }}
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/${{ steps.anykernel.outputs.zipname }}
        name: ${{ github.event.inputs.CODENAME }}-${{ steps.build_date.outputs.build_date }}
        tag_name: ${{ github.event.inputs.CODENAME }}-${{ steps.build_date.outputs.build_date }}
        body: |
          <a href="https://raw.githubusercontent.com/AlirezaParsi/pocof3/refs/heads/base/Rich%20deep%20teal%2C%20overhead%20bird%E2%80%99s%20eye%20view%20banner%20for%20ALP%20Kernel%2C%20a%20Linux%20kernel.%20Logo%20incorporated%2C%20top-down%20perspective%2C%20luxurious%20and%20vibrant%20color.%20Social%20media%20post%20banner.jpg">‚Äå</a> <b>Kernel Build Succeeded</b> ‚úÖ
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>Kernel successfully built!</b>, took ${{ steps.build.outputs.elapsed_time }} seconds.
          <b>üì± Device Codename</b>: <code>${{ github.event.inputs.CODENAME }}</code>
          <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          <b>Workflow File</b>: ${{ github.workflow }}.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload_release

    - name: Determine Build Tag
      id: build_tag
      run: |
        if ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' }}; then
          build_tag="#release"
        else
          build_tag="#CI"
        fi
        echo "build_tag=$build_tag" >> $GITHUB_OUTPUT

    - name: Upload AnyKernel ZIP to Telegram with AOSP Thumbnail (Chat 1)
      if: success()
      run: |
        curl -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
         -F document=@"${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/${{ steps.anykernel.outputs.zipname }}" \
         -F thumb=@"aosp_thumbnail.jpg" \
         -F caption="#ALPKernel #a33x ${{ steps.build_tag.outputs.build_tag }}"$'\n'"<a href='https://t.me/ALPkernel/128'>flashing guide</a>" \
         -F parse_mode="HTML" \
         https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/

    - name: Upload AnyKernel ZIP to Telegram with AOSP Thumbnail (Chat 2)
      if: success()
      if: ${{ secrets.TELEGRAM_CHAT_ID_2 != '' }}
      run: |
        curl -F chat_id="${{ secrets.TELEGRAM_CHAT_ID_2 }}" \
         -F document=@"${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/${{ steps.anykernel.outputs.zipname }}" \
         -F thumb=@"aosp_thumbnail.jpg" \
         -F caption="#ALPKernel #a33x ${{ steps.build_tag.outputs.build_tag }}"$'\n'"<a href='https://t.me/ALPkernel/128'>flashing guide</a>" \
         -F parse_mode="HTML" \
         https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/

    - name: Send Success Notification
      if: success()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: html
        message: |
          <a href="https://raw.githubusercontent.com/AlirezaParsi/pocof3/refs/heads/base/Rich%20deep%20teal%2C%20overhead%20bird%E2%80%99s%20eye%20view%20banner%20for%20ALP%20Kernel%2C%20a%20Linux%20kernel.%20Logo%20incorporated%2C%20top-down%20perspective%2C%20luxurious%20and%20vibrant%20color.%20Social%20media%20post%20banner.jpg">‚Äå</a> <b>Kernel Build Succeeded</b> ‚úÖ
          üîß <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a>
          <b>üì¶ Build Title</b>: <code>${{ steps.workspace.outputs.build_title }}</code>
          <b>üì± Device Codename</b>: <code>${{ github.event.inputs.CODENAME }}</code>
          <b>üè∑Ô∏è Build Type</b>: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' && 'Release Build' || 'CI Build' }}
          <b>üìÑ File</b>:
          - <code>${{ steps.anykernel.outputs.zipname }}</code>
          ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' && format('üì• <b>Download Link</b>: <a href="{1}/{2}/releases/tag/{3}-{4}">Release {0}</a>', steps.build_date.outputs.build_date, github.server_url, github.repository, github.event.inputs.CODENAME, steps.build_date.outputs.build_date) || '' }}

    - name: Notify Build Failure
      if: failure()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: html
        message: |
          <a href="https://raw.githubusercontent.com/AlirezaParsi/pocof3/refs/heads/base/Rich%20deep%20teal%2C%20overhead%20bird%E2%80%99s%20eye%20view%20banner%20for%20ALP%20Kernel%2C%20a%20Linux%20kernel.%20Logo%20incorporated%2C%20top-down%20perspective%2C%20luxurious%20and%20vibrant%20color.%20Social%20media%20post%20banner.jpg">‚Äå</a> <b>Kernel Build Failed</b> ‚ùå
          üîß <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a>
          <b>‚è±Ô∏è Elapsed Time</b>: <code>${{ steps.build.outputs.elapsed_time }}</code> seconds
          <b>üì¶ Build Title</b>: <code>${{ steps.workspace.outputs.build_title }}</code>
          <b>üì± Device Codename</b>: <code>${{ github.event.inputs.CODENAME }}</code>
          <b>üè∑Ô∏è Build Type</b>: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' && 'Release Build' || 'CI Build' }}
          <b>üìÑ Workflow File</b>: ${{ github.workflow }}.yml

    - name: Notify Build Canceled
      if: cancelled()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: html
        message: |
          <a href="https://raw.githubusercontent.com/AlirezaParsi/pocof3/refs/heads/base/Rich%20deep%20teal%2C%20overhead%20bird%E2%80%99s%20eye%20view%20banner%20for%20ALP%20Kernel%2C%20a%20Linux%20kernel.%20Logo%20incorporated%2C%20top-down%20perspective%2C%20luxurious%20and%20vibrant%20color.%20Social%20media%20post%20banner.jpg">‚Äå</a> <b>Kernel Build Canceled</b> üö´
          üîß <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a>
          <b>üì¶ Build Title</b>: <code>${{ steps.workspace.outputs.build_title }}</code>
          <b>üì± Device Codename</b>: <code>${{ github.event.inputs.CODENAME }}</code>
          <b>üè∑Ô∏è Build Type</b>: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' && 'Release Build' || 'CI Build' }}
          <b>üìÑ Workflow File</b>: ${{ github.workflow }}.yml
          <b>üë§ Canceled by</b>: <a href="${{ github.server_url }}/${{ github.actor }}">${{ github.actor }}</a>

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: Image.gz
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: dtb
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/dtb

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: dtbo.img
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/dtbo.img

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: ${{ steps.anykernel.outputs.zipname }}
        path: |
          ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/AnyKernel3/
          !${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/AnyKernel3/.git
          !${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/AnyKernel3/.github
